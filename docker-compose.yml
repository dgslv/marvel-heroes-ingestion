version: '3'

x-airflow-common:
  &airflow-common
  build:
    context: .
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
    AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: 60
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
  user: "50000:50000"
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  datalake:
    image: postgres:13
    container_name: datalake
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: datalake
    restart: always
    volumes:
        - postgres_datalake:/var/lib/postgresql/data
        - ./init_db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - 5430:5432

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8088:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    restart: always

  airflow-init:
    <<: *airflow-common
    command: version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: airflow
      _AIRFLOW_WWW_USER_PASSWORD: airflow

  flower:
    <<: *airflow-common
    command: celery flower
    ports:
      - 5555:5555
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  set-airflow-variables:
    <<: *airflow-common
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      <<: *airflow-common-env
      MARVEL_API_KEY: d8a089282c4eb508af749e95e27990d7
      MARVEL_PRIVATE_KEY: 5ba711a6519fb7996c2cb8f26a789f8b097f2dab
      POSTGRES_DATALAKE_HOST: datalake
      POSTGRES_DATALAKE_PORT: 5432
      POSTGRES_DATALAKE_DBNAME: datalake
      POSTGRES_DATALAKE_USER: postgres
      POSTGRES_DATALAKE_PASS: postgres

    volumes:
      - ./airflow/dags/src:/opt/airflow/setup/src/
      - ./setup/set_airflow_variables.py:/opt/airflow/setup/set_airflow_variables.py
    entrypoint: ["/bin/bash", "-c", "airflow webserver & sleep 10 && airflow scheduler & sleep 10 && python /opt/airflow/setup/set_airflow_variables.py"]

volumes:
  postgres-db-volume:
  postgres_datalake: